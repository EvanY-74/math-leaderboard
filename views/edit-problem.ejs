<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">
    <title>Math Leaderboard</title>
</head>
<body>
    <a class="back" href="/manager">‚Üê manager</a>
    <main>
        <h1>Proposed problem</h1>
        <hr>
        <form style="width: 100%">
            <input style="display: inline" type="text" name="name" value="<%= problem.name %>" required><label style="display: inline"> made by <%= problem.creatorName %></label><br>
            <input type="text" name="description" style="width: 100%" placeholder="optional" value="<%= locals.problem?.description || '' %>">
            <textarea name="content" rows="6" required><%= problem.content %></textarea>
            <label>Can this problem be automatically graded?</label><br>
            <input type="checkbox" id="testable" name="testable" <%= problem.testable ? 'checked' : '' %>><label style="display: inline; font-size: 1em" for="testable">yes</label><br>
            <label for="difficulty">Initial difficulty</label>
            <input type="number" id="difficulty" name="difficulty">
            <div class="buttons-container">
                <button class="primary">Approve</button>
                <button class="primary">Reject</button>
            </div>
            <div id="rejection-container" style="display: none">
                <label for="reasoning">Rejection reasoning</label>
                <textarea name="reasoning" id="reasoning" rows="3"></textarea>
            <!-- <div class="buttons-container"> -->
                <button class="primary">Submit</button>
            <!-- </div> -->
            </div>
        </form>
    </main>
    <script>
        const form = document.querySelector('form');
        const [approveButton, rejectButton] = document.querySelectorAll('form button');
        const rejectionContainer = document.getElementById('rejection-container');

        form.addEventListener('submit', e => {e.preventDefault()});

        approveButton.addEventListener('mouseup', async e => {
            e.preventDefault();
        
            const name = form.name.value;
            const description = form.description.value;
            const content = form.content.value;
            const testable = form.testable.checked;
            const difficulty = form.difficulty.value;

            rejectButton.disabled = true;
            try {
                const response = await fetch(location.href, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ approving: true, name, description, content, testable, difficulty })
                });
                
                if (response.redirected) {
                    location.href = response.url;
                } else {
                    console.log(response);
                }
            } catch (error) {
                console.error(error);
                // submitButton.innerHTML = 'client error';
            }
        });

        rejectButton.addEventListener('mouseup', async e => {
            e.preventDefault();
        
            rejectionContainer.style.display = 'inline-block';
            approveButton.disabled = true;
            // rejectButton.disabled = true;
        });

        const rejectionReasoningInput = document.getElementById('reasoning');

        rejectionContainer.querySelector('button').addEventListener('mouseup', async e => {
            e.preventDefault();
            console.log(rejectionReasoningInput.value);

            try {
                const response = await fetch(location.href, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ approving: false, reasoning: rejectionReasoningInput.value })
                });

                if (response.redirected) {
                    location.href = response.url;
                } else {
                    console.log(response);
                }
            } catch (error) {
                console.error(error);
                // submitButton.innerHTML = 'client error';
            }
        });
    </script>
</body>